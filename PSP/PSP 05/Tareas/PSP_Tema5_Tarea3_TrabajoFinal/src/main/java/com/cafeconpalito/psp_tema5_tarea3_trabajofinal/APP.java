/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.cafeconpalito.psp_tema5_tarea3_trabajofinal;

import com.cafeconpalito.psp_tema5_tarea3_trabajofinal.Metodos.HashTool;
import com.cafeconpalito.psp_tema5_tarea3_trabajofinal.Metodos.KeyPairManagerRSA;
import com.cafeconpalito.psp_tema5_tarea3_trabajofinal.Metodos.Logs;
import com.cafeconpalito.psp_tema5_tarea3_trabajofinal.Metodos.RSAEncryption;
import java.awt.Color;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.security.KeyPair;
import java.util.logging.Level;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author damt207
 */
public class APP extends javax.swing.JFrame {

    private static KeyPair RSAgeneratorKeyPair;
    private static KeyPair RSAcifradoKeyPair;

    /**
     * Creates new form Cifrado
     */
    public APP() {
        initComponents();

        Logs.openLogs();

        //CARGA LOS DISTINTOS ALGORITMOS DE CIFRADO PARA EL HASH
        for (String algorithm : HashTool.getAlgorithms()) {
            jComboBoxHASH.addItem(algorithm);
        }

        //PERMITE EL WRAP PARA LOS TEXT AREA Y QUE SOLO HAGAN SCROLL PARA ABAJO
        jTextAreaRSAgeneratorPrivateKey.setLineWrap(true);
        jTextAreaRSAgeneratorPrivateKey.setWrapStyleWord(true);

        jTextAreaRSAgeneratorPublicKey.setLineWrap(true);
        jTextAreaRSAgeneratorPublicKey.setWrapStyleWord(true);

        jTextAreaHASHResponse.setLineWrap(true);
        jTextAreaHASHResponse.setWrapStyleWord(true);

        jTextHASHAreaString.setLineWrap(true);
        jTextHASHAreaString.setWrapStyleWord(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel3 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabelHASHString = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextHASHAreaString = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxHASH = new javax.swing.JComboBox<>();
        jButtonHASHCifrarTexto = new javax.swing.JButton();
        jLabelHASHFilePath = new javax.swing.JLabel();
        jButtonHASHSelectFile = new javax.swing.JButton();
        jButtonHASHCifrarArchivo = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButtonHASHLimpiar = new javax.swing.JButton();
        jTextFieldHASHRutaArchivo = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaHASHResponse = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabelRSAgeneratorKeySize = new javax.swing.JLabel();
        jComboBoxRSAgeneratorKeySize = new javax.swing.JComboBox<>();
        jButtonRSAgeneratorLimpiar = new javax.swing.JButton();
        jLabelRSAgeneratorKeySeed = new javax.swing.JLabel();
        jTextFieldRSAgeneratorKeySeed = new javax.swing.JTextField();
        jButtonRSAgeneratorGenerarPair = new javax.swing.JButton();
        jLabelRSAprivateKey = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaRSAgeneratorPrivateKey = new javax.swing.JTextArea();
        jLabelRSApubliKey = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextAreaRSAgeneratorPublicKey = new javax.swing.JTextArea();
        jButtonRSAgeneratorSaveKeys = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButtonRSAcifradoLimpiar = new javax.swing.JButton();
        jLabelRSAcifradoPrivKey = new javax.swing.JLabel();
        jLabelRSAcifradoPubKey = new javax.swing.JLabel();
        jLabelRSAcifradoFilePrivKey = new javax.swing.JLabel();
        jTextFieldRSAcifradoFilePrivKeyPath = new javax.swing.JTextField();
        jTextFieldRSAcifradoPivKeyPath = new javax.swing.JTextField();
        jTextFieldRSAcifradoPubKeyPath = new javax.swing.JTextField();
        jTextFieldRSAcifradoFilePubKeyPath = new javax.swing.JTextField();
        jLabelRSAcifradoFilePubKey = new javax.swing.JLabel();
        jButtonRSAcifradoSelectPrivKeyPath = new javax.swing.JButton();
        jButtonRSAcifradoSelectFilePrivKeyPath = new javax.swing.JButton();
        jButtonRSAcifradoSelectPubKeyPath = new javax.swing.JButton();
        jButtonRSAcifradoSelectFilePubKeyPath = new javax.swing.JButton();
        jButtonRSAcifradoCifraPrivKey = new javax.swing.JButton();
        jButtonRSAcifradoCifraPubKey = new javax.swing.JButton();
        jButtonRSAcifradoDesciPrivKey = new javax.swing.JButton();
        jButtonRSAcifradoDesciPubKey = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabelLogs = new javax.swing.JLabel();
        jButtonLogs = new javax.swing.JButton();
        jLabelCafeConPalito = new javax.swing.JLabel();
        jButtonSalir = new javax.swing.JButton();

        jScrollPane5.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cifrado Tema 5 Tarea Final");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabelHASHString.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelHASHString.setText("Introduce un texto para cifrar");

        jTextHASHAreaString.setColumns(20);
        jTextHASHAreaString.setRows(5);
        jScrollPane1.setViewportView(jTextHASHAreaString);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Selecciona metodo de Cifrado");

        jButtonHASHCifrarTexto.setText("Cifrar");
        jButtonHASHCifrarTexto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHASHCifrarTextoActionPerformed(evt);
            }
        });

        jLabelHASHFilePath.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelHASHFilePath.setText("Selecciona un archivo para cifrar");

        jButtonHASHSelectFile.setText("Seleccionar");
        jButtonHASHSelectFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHASHSelectFileActionPerformed(evt);
            }
        });

        jButtonHASHCifrarArchivo.setText("Cifrar");
        jButtonHASHCifrarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHASHCifrarArchivoActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Funcion resumen HASH");

        jButtonHASHLimpiar.setText("Limpiar");
        jButtonHASHLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHASHLimpiarActionPerformed(evt);
            }
        });

        jTextFieldHASHRutaArchivo.setFocusable(false);

        jTextAreaHASHResponse.setColumns(20);
        jTextAreaHASHResponse.setRows(5);
        jScrollPane2.setViewportView(jTextAreaHASHResponse);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButtonHASHLimpiar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(jComboBoxHASH, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldHASHRutaArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabelHASHFilePath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelHASHString, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
                            .addComponent(jButtonHASHCifrarTexto)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonHASHCifrarArchivo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonHASHSelectFile))))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(491, 491, 491)))
                .addGap(27, 27, 27))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelHASHString)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonHASHCifrarTexto)
                        .addGap(18, 18, 18))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jComboBoxHASH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(117, 117, 117)))
                .addComponent(jLabelHASHFilePath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldHASHRutaArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonHASHCifrarArchivo)
                    .addComponent(jButtonHASHSelectFile))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonHASHLimpiar)
                .addGap(17, 17, 17))
        );

        jTabbedPane1.addTab("HASH Cifrado ", jPanel1);

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));

        jLabelRSAgeneratorKeySize.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAgeneratorKeySize.setText("Selecciona tamaño clave");

        jComboBoxRSAgeneratorKeySize.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "512", "1024", "2048", "3072", "4096" }));

        jButtonRSAgeneratorLimpiar.setText("Limpiar");
        jButtonRSAgeneratorLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAgeneratorLimpiarActionPerformed(evt);
            }
        });

        jLabelRSAgeneratorKeySeed.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAgeneratorKeySeed.setText("Introduce una semilla");

        jButtonRSAgeneratorGenerarPair.setText("Generar");
        jButtonRSAgeneratorGenerarPair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAgeneratorGenerarPairActionPerformed(evt);
            }
        });

        jLabelRSAprivateKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAprivateKey.setText("Clave Privada");

        jTextAreaRSAgeneratorPrivateKey.setColumns(20);
        jTextAreaRSAgeneratorPrivateKey.setRows(5);
        jScrollPane3.setViewportView(jTextAreaRSAgeneratorPrivateKey);

        jLabelRSApubliKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSApubliKey.setText("Clave Publica");

        jTextAreaRSAgeneratorPublicKey.setColumns(20);
        jTextAreaRSAgeneratorPublicKey.setRows(5);
        jScrollPane4.setViewportView(jTextAreaRSAgeneratorPublicKey);

        jButtonRSAgeneratorSaveKeys.setText("Guardar");
        jButtonRSAgeneratorSaveKeys.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAgeneratorSaveKeysActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButtonRSAgeneratorLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRSAgeneratorGenerarPair)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonRSAgeneratorSaveKeys))
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabelRSApubliKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelRSAgeneratorKeySize, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                .addComponent(jComboBoxRSAgeneratorKeySize, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabelRSAgeneratorKeySeed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldRSAgeneratorKeySeed))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabelRSAprivateKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)))))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabelRSAgeneratorKeySize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxRSAgeneratorKeySize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelRSAgeneratorKeySeed)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldRSAgeneratorKeySeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonRSAgeneratorLimpiar)
                            .addComponent(jButtonRSAgeneratorGenerarPair)
                            .addComponent(jButtonRSAgeneratorSaveKeys))
                        .addGap(17, 17, 17))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabelRSAprivateKey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabelRSApubliKey)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(70, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("RSA Key Generator", jPanel5);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        jButtonRSAcifradoLimpiar.setText("Limpiar");
        jButtonRSAcifradoLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoLimpiarActionPerformed(evt);
            }
        });

        jLabelRSAcifradoPrivKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAcifradoPrivKey.setText("Clave Privada");

        jLabelRSAcifradoPubKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAcifradoPubKey.setText("Clave Publica");

        jLabelRSAcifradoFilePrivKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAcifradoFilePrivKey.setText("Selecciona un archivo para cifrar o descifrar");

        jTextFieldRSAcifradoFilePrivKeyPath.setFocusable(false);

        jTextFieldRSAcifradoPivKeyPath.setFocusable(false);

        jTextFieldRSAcifradoPubKeyPath.setFocusable(false);

        jTextFieldRSAcifradoFilePubKeyPath.setFocusable(false);

        jLabelRSAcifradoFilePubKey.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabelRSAcifradoFilePubKey.setText("Selecciona un archivo para cifrar o descifrar");

        jButtonRSAcifradoSelectPrivKeyPath.setText("Seleccionar");
        jButtonRSAcifradoSelectPrivKeyPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoSelectPrivKeyPathActionPerformed(evt);
            }
        });

        jButtonRSAcifradoSelectFilePrivKeyPath.setText("Seleccionar");
        jButtonRSAcifradoSelectFilePrivKeyPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoSelectFilePrivKeyPathActionPerformed(evt);
            }
        });

        jButtonRSAcifradoSelectPubKeyPath.setText("Seleccionar");
        jButtonRSAcifradoSelectPubKeyPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoSelectPubKeyPathActionPerformed(evt);
            }
        });

        jButtonRSAcifradoSelectFilePubKeyPath.setText("Seleccionar");
        jButtonRSAcifradoSelectFilePubKeyPath.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoSelectFilePubKeyPathActionPerformed(evt);
            }
        });

        jButtonRSAcifradoCifraPrivKey.setText("Cifrar");
        jButtonRSAcifradoCifraPrivKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoCifraPrivKeyActionPerformed(evt);
            }
        });

        jButtonRSAcifradoCifraPubKey.setText("Cifrar");
        jButtonRSAcifradoCifraPubKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoCifraPubKeyActionPerformed(evt);
            }
        });

        jButtonRSAcifradoDesciPrivKey.setText("Descifrar");
        jButtonRSAcifradoDesciPrivKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoDesciPrivKeyActionPerformed(evt);
            }
        });

        jButtonRSAcifradoDesciPubKey.setText("Descifrar");
        jButtonRSAcifradoDesciPubKey.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRSAcifradoDesciPubKeyActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(191, 191, 191)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelRSAcifradoFilePubKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabelRSAcifradoFilePrivKey, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButtonRSAcifradoSelectPubKeyPath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonRSAcifradoCifraPubKey)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonRSAcifradoDesciPubKey))
                            .addComponent(jButtonRSAcifradoSelectFilePubKeyPath)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButtonRSAcifradoSelectPrivKeyPath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonRSAcifradoCifraPrivKey)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonRSAcifradoDesciPrivKey))
                            .addComponent(jLabelRSAcifradoPrivKey, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                            .addComponent(jButtonRSAcifradoSelectFilePrivKeyPath)
                            .addComponent(jLabelRSAcifradoPubKey, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
                            .addComponent(jTextFieldRSAcifradoPivKeyPath)
                            .addComponent(jTextFieldRSAcifradoFilePrivKeyPath)
                            .addComponent(jTextFieldRSAcifradoPubKeyPath)
                            .addComponent(jTextFieldRSAcifradoFilePubKeyPath))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jButtonRSAcifradoLimpiar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabelRSAcifradoPrivKey)
                .addGap(3, 3, 3)
                .addComponent(jTextFieldRSAcifradoPivKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRSAcifradoSelectPrivKeyPath)
                    .addComponent(jButtonRSAcifradoCifraPrivKey)
                    .addComponent(jButtonRSAcifradoDesciPrivKey))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelRSAcifradoFilePrivKey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRSAcifradoFilePrivKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRSAcifradoSelectFilePrivKeyPath)
                .addGap(18, 18, 18)
                .addComponent(jLabelRSAcifradoPubKey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRSAcifradoPubKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRSAcifradoSelectPubKeyPath)
                    .addComponent(jButtonRSAcifradoCifraPubKey)
                    .addComponent(jButtonRSAcifradoDesciPubKey))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelRSAcifradoFilePubKey)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRSAcifradoFilePubKeyPath, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonRSAcifradoSelectFilePubKeyPath)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonRSAcifradoLimpiar)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RSA Cifrado", jPanel6);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 808, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 444, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("AES Cifrado", jPanel2);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        jLabelLogs.setText("<html><p>En los logs estan contenida toda la informacion de las interacciones y errores generados por la aplicacion.</p></html>");

        jButtonLogs.setText("Abrir Logs");
        jButtonLogs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonLogsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelLogs, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonLogs))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabelLogs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonLogs)
                .addContainerGap(367, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Help", jPanel4);

        jLabelCafeConPalito.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelCafeConPalito.setText("<html><p>Made by Cafe Con Palito®</p><p>with love ♡</p></html> ");

        jButtonSalir.setText("Cerrar");
        jButtonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSalir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelCafeConPalito, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
            .addComponent(jTabbedPane1)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jButtonSalir)
                    .addComponent(jLabelCafeConPalito, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Metodo para seleccionar un archivo, despliega un file chooser.
     *
     * @param titulo titulo del file chooser
     * @param isFile True si lo que se quiere es un archivo, false para un
     * directorio
     * @return devuelve la ruta del archivo o null.
     */
    private String selectFile(String titulo, boolean isFile) {

        //Creamos el objeto JFileChooser
        JFileChooser fc = new JFileChooser();

        //Indicamos lo que podemos seleccionar
        if (isFile) {
            fc.setFileSelectionMode(JFileChooser.FILES_ONLY);
        } else {
            fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        }

        //Titulo del File Chooser
        fc.setDialogTitle(titulo);

        //Creamos el filtro de archivos a recibir puede ser un String simple para 1 o un array de Strings para multiples tipos.    
        //SOLO UN TIPO
        //SI EL ARCHIVO A GUARDAR ES .DAT añadimos el filtro
        //FileNameExtensionFilter filtro = new FileNameExtensionFilter("*.dat", "dat");
        //fc.setFileFilter(filtro);
        //MULTIPLES TIPOS
        /*
        String[] tiposImagen = {"png","jpg","jpeg"};
        String[] descripcion = {"*.png","*.jpg","*.jpeg"};

        //setea para todas las extenciones de imagen que tengo
        fc.setFileFilter(new FileNameExtensionFilter("Imagenes", tiposImagen));
        
        //añade uno por cada tipo de imagen
        for (int i = 0; i < descripcion.length; i++) {
            
            fc.addChoosableFileFilter(new FileNameExtensionFilter(descripcion[i], tiposImagen[i]));
        }
        */
        
        //Abrimos la ventana, guardamos la opcion seleccionada por el usuario
        int seleccion = fc.showOpenDialog(this);

        //Si el usuario, pincha en aceptar
        if (seleccion == JFileChooser.APPROVE_OPTION) {

            //Seleccionamos el fichero y guardamos su informacion en un tipo File
            //File fichero = fc.getSelectedFile().;
            //SACA LA EXTENCION DE LA IMAGEN
            //extencionImagen = fichero.toString().substring(fichero.toString().lastIndexOf("."));
            //Guarda en el Path la ruta Original.
            //origenPath = FileSystems.getDefault().getPath(fichero.getAbsolutePath());
            //Ecribe la ruta del fichero seleccionado en el campo de texto
            //System.out.println(Files.getFileExtension(fc.getSelectedFile().getAbsolutePath()));
            return fc.getSelectedFile().getAbsolutePath();

        }

        return null;

    }

    /**
     * limpia los errores de HASH cifrado.
     */
    private void clearErrorsHASH() {
        jLabelHASHString.setForeground(Color.black);
        jLabelHASHFilePath.setForeground(Color.black);
    }

    /**
     * Limpia los campos de HASH cifrado.
     */
    private void clearFieldsHASH() {
        clearErrorsHASH();
        jTextFieldHASHRutaArchivo.setText("");
        jTextHASHAreaString.setText("");
        jTextAreaHASHResponse.setText("");
    }

    /**
     * Limpia los errores de la vista RSA generator.
     */
    private void clearErrorsRSAgenerator() {
        jLabelRSAprivateKey.setForeground(Color.black);
        jLabelRSApubliKey.setForeground(Color.black);
    }

    /**
     * Limpia los campos de la vista RSA generator.
     */
    private void clearFieldsRSAgenerator() {
        clearErrorsRSAgenerator();
        jTextFieldRSAgeneratorKeySeed.setText("");
        jTextAreaRSAgeneratorPrivateKey.setText("");
        jTextAreaRSAgeneratorPublicKey.setText("");
    }
    
    /**
     * limpia los errores de las vista RSA cifrado.
     */
    private void clearErrorsRSAcifrado(){
        jLabelRSAcifradoPrivKey.setForeground(Color.black);
        jLabelRSAcifradoPubKey.setForeground(Color.black);
        jLabelRSAcifradoFilePrivKey.setForeground(Color.black);
        jLabelRSAcifradoFilePubKey.setForeground(Color.black);
    }
    
    /**
     * limpia los campos de las vista RSA cifrado.
     */
    private void clearFieldsRSAcifrado(){
        clearErrorsRSAcifrado();
        jTextFieldRSAcifradoPivKeyPath.setText("");
        jTextFieldRSAcifradoPubKeyPath.setText("");
        jTextFieldRSAcifradoFilePrivKeyPath.setText("");
        jTextFieldRSAcifradoFilePubKeyPath.setText("");
    }
    
    /**
     * Accion del boton Cifrar String HASH. devuelve el cifrado hash en
     * Hexadecimal
     *
     * @param evt
     */
    private void jButtonHASHCifrarTextoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHASHCifrarTextoActionPerformed

        clearErrorsHASH();
        if (!jTextHASHAreaString.getText().isBlank()) {
            jTextAreaHASHResponse.setText(HashTool.getStringHash(jComboBoxHASH.getSelectedItem().toString(), jTextHASHAreaString.getText()));
        } else {
            jLabelHASHString.setForeground(Color.red);
        }

    }//GEN-LAST:event_jButtonHASHCifrarTextoActionPerformed

    /**
     * Accion del boton Cifrar File HASH. devuelve el cifrado hash en
     * Hexadecimal
     *
     * @param evt
     */
    private void jButtonHASHCifrarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHASHCifrarArchivoActionPerformed

        clearErrorsHASH();
        if (!jTextFieldHASHRutaArchivo.getText().isBlank()) {
            jTextAreaHASHResponse.setText(HashTool.getFilehash(jComboBoxHASH.getSelectedItem().toString(), new File(jTextFieldHASHRutaArchivo.getText())));
        } else {
            jLabelHASHFilePath.setForeground(Color.red);
        }

    }//GEN-LAST:event_jButtonHASHCifrarArchivoActionPerformed

    /**
     * Accion del boton Seleccionar de HASH cifrado. despliega un file chooser
     * para seleccinar el archivo, y muestra la ruta del archivo.
     *
     * @param evt
     */
    private void jButtonHASHSelectFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHASHSelectFileActionPerformed

        String selected = selectFile("Selecciona un archivo", false);
        if (selected != null) {
            jTextFieldHASHRutaArchivo.setText(selected);
        }

    }//GEN-LAST:event_jButtonHASHSelectFileActionPerformed

    private void jButtonHASHLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHASHLimpiarActionPerformed
        // TODO add your handling code here:
        clearFieldsHASH();
    }//GEN-LAST:event_jButtonHASHLimpiarActionPerformed

    private void jButtonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSalirActionPerformed
        // TODO add your handling code here:

        Logs.closeLogs();
        System.exit(0);

    }//GEN-LAST:event_jButtonSalirActionPerformed

    /**
     * Abre la ruta de los logs
     *
     * @param evt
     */
    private void jButtonLogsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonLogsActionPerformed

        clearFieldsRSAgenerator();
        try {
            String path = new File(".").getCanonicalPath();
            Desktop.getDesktop().open(new File(path + "/logs"));
            Logs.LOGGER_USER.log(Level.INFO, "El usuario accede a la carpeta de Logs");
        } catch (IOException ex) {
            Logs.LOGGER_ERRORS.log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonLogsActionPerformed

    private void jButtonRSAgeneratorLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAgeneratorLimpiarActionPerformed
        // TODO add your handling code here:
        clearFieldsRSAgenerator();
    }//GEN-LAST:event_jButtonRSAgeneratorLimpiarActionPerformed

    private void jButtonRSAgeneratorGenerarPairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAgeneratorGenerarPairActionPerformed
        // TODO add your handling code here:

        RSAgeneratorKeyPair = KeyPairManagerRSA.makeKeyPair(jTextFieldRSAgeneratorKeySeed.getText(), Integer.parseInt((String) jComboBoxRSAgeneratorKeySize.getSelectedItem()));

        jTextAreaRSAgeneratorPrivateKey.setText(RSAgeneratorKeyPair.getPrivate().toString());
        jTextAreaRSAgeneratorPublicKey.setText(RSAgeneratorKeyPair.getPublic().toString());

    }//GEN-LAST:event_jButtonRSAgeneratorGenerarPairActionPerformed

    /**
     * limpiar campos RSA cifrado.
     * @param evt 
     */
    private void jButtonRSAcifradoLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoLimpiarActionPerformed
        // TODO add your handling code here:
        clearFieldsRSAcifrado();
        
    }//GEN-LAST:event_jButtonRSAcifradoLimpiarActionPerformed

    /**
     * Boton Guardar RSA generadas. si no se selecciona una ruta lanzara mensaje
     * de error.
     *
     * @param evt
     */
    private void jButtonRSAgeneratorSaveKeysActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAgeneratorSaveKeysActionPerformed
        // TODO add your handling code here:

        clearErrorsRSAgenerator();
        if (jTextAreaRSAgeneratorPrivateKey.getText().isBlank() || jTextAreaRSAgeneratorPublicKey.getText().isBlank()) {
            jLabelRSAprivateKey.setForeground(Color.red);
            jLabelRSApubliKey.setForeground(Color.red);
        } else {
            String path = selectFile("Guardar Claves, Selecciona un directorio", false);
            if (path != null) {
                KeyPairManagerRSA.saveClave(path, RSAgeneratorKeyPair);
                
            } else {
                Logs.LOGGER_ERRORS.log(Level.SEVERE, "El usuario no selecciono un ruta para guardar el fichero");
                JOptionPane jop = new JOptionPane("Selecciona una ruta valida", JOptionPane.ERROR_MESSAGE);
                JDialog jd = jop.createDialog("ERROR");
                jd.setLocationRelativeTo(null);
                jd.setVisible(true);
            }

        }

    }//GEN-LAST:event_jButtonRSAgeneratorSaveKeysActionPerformed

    /**
     * Carga la ruta de una Private Key RSA
     * @param evt 
     */
    private void jButtonRSAcifradoSelectPrivKeyPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoSelectPrivKeyPathActionPerformed
        // TODO add your handling code here:
        String path = selectFile("Selecciona una Private Key", true);
        if (path != null) {
            jTextFieldRSAcifradoPivKeyPath.setText(path);
        }
        
    }//GEN-LAST:event_jButtonRSAcifradoSelectPrivKeyPathActionPerformed

    /**
     * Carga la ruta de un fichero para cifrar o descifrar con una Private Key RSA
     * @param evt 
     */
    private void jButtonRSAcifradoSelectFilePrivKeyPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoSelectFilePrivKeyPathActionPerformed
        // TODO add your handling code here:
        String path = selectFile("Selecciona una archivo", true);
        if (path != null) {
            jTextFieldRSAcifradoFilePrivKeyPath.setText(path);
        }
        
    }//GEN-LAST:event_jButtonRSAcifradoSelectFilePrivKeyPathActionPerformed

    /**
     * Carga la ruta de una Public Key RSA
     * @param evt 
     */
    private void jButtonRSAcifradoSelectPubKeyPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoSelectPubKeyPathActionPerformed
        // TODO add your handling code here:
        String path = selectFile("Selecciona una Public Key", true);
        if (path != null) {
            jTextFieldRSAcifradoPubKeyPath.setText(path);
        }
    }//GEN-LAST:event_jButtonRSAcifradoSelectPubKeyPathActionPerformed

    /**
     * Carga la ruta de un fichero para cifrar o descifrar con una Public Key RSA
     * @param evt 
     */
    private void jButtonRSAcifradoSelectFilePubKeyPathActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoSelectFilePubKeyPathActionPerformed
        // TODO add your handling code here:
        String path = selectFile("Selecciona una archivo", true);
        if (path != null) {
            jTextFieldRSAcifradoFilePubKeyPath.setText(path);
        }
    }//GEN-LAST:event_jButtonRSAcifradoSelectFilePubKeyPathActionPerformed

    private void jButtonRSAcifradoCifraPrivKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoCifraPrivKeyActionPerformed

        if (!jTextFieldRSAcifradoPivKeyPath.getText().isBlank()) {
            String absolutePath = selectFile("Selecciona Archivo Para encriptar con PrivateKey", true);
            Object key = KeyPairManagerRSA.loadClave(jTextFieldRSAcifradoPivKeyPath.getText(), true);
            RSAEncryption.cifrar(absolutePath, key, true);
        }
        
    }//GEN-LAST:event_jButtonRSAcifradoCifraPrivKeyActionPerformed

    private void jButtonRSAcifradoCifraPubKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoCifraPubKeyActionPerformed
        if (!jTextFieldRSAcifradoPubKeyPath.getText().isBlank()) {
            String absolutePath = selectFile("Selecciona Archivo Para encriptar con PublicKey", true);
            Object key = KeyPairManagerRSA.loadClave(jTextFieldRSAcifradoPubKeyPath.getText(), false);
            RSAEncryption.cifrar(absolutePath, key, false);
        }
    }//GEN-LAST:event_jButtonRSAcifradoCifraPubKeyActionPerformed

    private void jButtonRSAcifradoDesciPrivKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoDesciPrivKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRSAcifradoDesciPrivKeyActionPerformed

    private void jButtonRSAcifradoDesciPubKeyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRSAcifradoDesciPubKeyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButtonRSAcifradoDesciPubKeyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(APP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new APP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonHASHCifrarArchivo;
    private javax.swing.JButton jButtonHASHCifrarTexto;
    private javax.swing.JButton jButtonHASHLimpiar;
    private javax.swing.JButton jButtonHASHSelectFile;
    private javax.swing.JButton jButtonLogs;
    private javax.swing.JButton jButtonRSAcifradoCifraPrivKey;
    private javax.swing.JButton jButtonRSAcifradoCifraPubKey;
    private javax.swing.JButton jButtonRSAcifradoDesciPrivKey;
    private javax.swing.JButton jButtonRSAcifradoDesciPubKey;
    private javax.swing.JButton jButtonRSAcifradoLimpiar;
    private javax.swing.JButton jButtonRSAcifradoSelectFilePrivKeyPath;
    private javax.swing.JButton jButtonRSAcifradoSelectFilePubKeyPath;
    private javax.swing.JButton jButtonRSAcifradoSelectPrivKeyPath;
    private javax.swing.JButton jButtonRSAcifradoSelectPubKeyPath;
    private javax.swing.JButton jButtonRSAgeneratorGenerarPair;
    private javax.swing.JButton jButtonRSAgeneratorLimpiar;
    private javax.swing.JButton jButtonRSAgeneratorSaveKeys;
    private javax.swing.JButton jButtonSalir;
    private javax.swing.JComboBox<String> jComboBoxHASH;
    private javax.swing.JComboBox<String> jComboBoxRSAgeneratorKeySize;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelCafeConPalito;
    private javax.swing.JLabel jLabelHASHFilePath;
    private javax.swing.JLabel jLabelHASHString;
    private javax.swing.JLabel jLabelLogs;
    private javax.swing.JLabel jLabelRSAcifradoFilePrivKey;
    private javax.swing.JLabel jLabelRSAcifradoFilePubKey;
    private javax.swing.JLabel jLabelRSAcifradoPrivKey;
    private javax.swing.JLabel jLabelRSAcifradoPubKey;
    private javax.swing.JLabel jLabelRSAgeneratorKeySeed;
    private javax.swing.JLabel jLabelRSAgeneratorKeySize;
    private javax.swing.JLabel jLabelRSAprivateKey;
    private javax.swing.JLabel jLabelRSApubliKey;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea jTextAreaHASHResponse;
    private javax.swing.JTextArea jTextAreaRSAgeneratorPrivateKey;
    private javax.swing.JTextArea jTextAreaRSAgeneratorPublicKey;
    private javax.swing.JTextField jTextFieldHASHRutaArchivo;
    private javax.swing.JTextField jTextFieldRSAcifradoFilePrivKeyPath;
    private javax.swing.JTextField jTextFieldRSAcifradoFilePubKeyPath;
    private javax.swing.JTextField jTextFieldRSAcifradoPivKeyPath;
    private javax.swing.JTextField jTextFieldRSAcifradoPubKeyPath;
    private javax.swing.JTextField jTextFieldRSAgeneratorKeySeed;
    private javax.swing.JTextArea jTextHASHAreaString;
    // End of variables declaration//GEN-END:variables
}
