/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package conversorCaF;

import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;


/**
 *
 * @author damt207/
 */
public class JFrameConversor extends javax.swing.JFrame {

    private int maxCaracteres = 20;
    
    /**
     * Creates new form JFrameConversor
     */
    public JFrameConversor() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton_convertir = new javax.swing.JButton();
        jLabel2_Celsius = new javax.swing.JLabel();
        jTextField_ValorCelcius = new javax.swing.JTextField();
        jTextField_Respuesta = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Conversor C a F");
        setMaximumSize(new java.awt.Dimension(230, 200));
        setResizable(false);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        jButton_convertir.setBackground(new java.awt.Color(102, 255, 0));
        jButton_convertir.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        jButton_convertir.setText("Convertir");
        jButton_convertir.setMaximumSize(new java.awt.Dimension(82, 22));
        jButton_convertir.setMinimumSize(new java.awt.Dimension(82, 22));
        jButton_convertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_convertirActionPerformed(evt);
            }
        });

        jLabel2_Celsius.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2_Celsius.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2_Celsius.setText("Conversor");
        jLabel2_Celsius.setToolTipText("");

        jTextField_ValorCelcius.setToolTipText("");
        jTextField_ValorCelcius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_ValorCelciusActionPerformed(evt);
            }
        });
        jTextField_ValorCelcius.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField_ValorCelciusKeyPressed(evt);
            }
        });

        jTextField_Respuesta.setToolTipText("");
        jTextField_Respuesta.setFocusable(false);
        jTextField_Respuesta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_RespuestaActionPerformed(evt);
            }
        });

        jLabel1.setText("ºC");

        jLabel2.setText("ºF");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2_Celsius, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(68, 68, 68)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jTextField_Respuesta, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(jButton_convertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_ValorCelcius))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel2_Celsius, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_ValorCelcius, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jButton_convertir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_convertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_convertirActionPerformed
        // TODO add your handling code here:
        igual();
    }//GEN-LAST:event_jButton_convertirActionPerformed

    private void igual() {
        String valorCelsius = jTextField_ValorCelcius.getText();
        double celsius;
        
        if (!valorCelsius.isEmpty()) {
            try {
            
            celsius = Double.parseDouble(valorCelsius);
            
            double fahren;
            
            fahren = (celsius * 9/5) + 32;
           
            jTextField_Respuesta.setForeground(Color.black);
            jTextField_Respuesta.setText(fahren +"");
            
        } catch (NumberFormatException e) {
            //System.err.println("Error Number Format Exception");
            
            jTextField_Respuesta.setForeground(Color.red);
            jTextField_Respuesta.setText("Error");
        
        }
        
        
            
        } else {
            jTextField_Respuesta.setForeground(Color.red);
            jTextField_Respuesta.setText("Introduce un valor");
            panelInsertarValor();
        }
        
        jTextField_ValorCelcius.requestFocus();
        
        
    }
    
    private void panelInsertarValor(){
        
        JOptionPane JP = new JOptionPane();
        JP.setAlignmentX(LEFT_ALIGNMENT);
        JP.setLocation(10,10);
        JP.setVisible(true);
        JP.showMessageDialog(null,"Inserta un valor", "Fallo", JOptionPane.INFORMATION_MESSAGE);
        

        /*
        JOptionPane pane = new JOptionPane();
        //pane.showMessageDialog(null,"Inserta un valor", "Fallo", JOptionPane.INFORMATION_MESSAGE);
        JDialog d = pane.createDialog((JFrame)null, "Title");
        d.setLocation(10,10);
        d.setVisible(true);
        */
        
    }
    
    private void panelComa(){
        JOptionPane JP = new JOptionPane();
        JP.showMessageDialog(null,"No uses coma usa PUNTO", "Fallo", JOptionPane.ERROR_MESSAGE);
        
    }
    
    private void panelLetra(){
        JOptionPane.showMessageDialog(null,"No puedes precionar letras", "Fallo", JOptionPane.ERROR_MESSAGE);
    }
    
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        
        /*
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            igual();
        }
        if (key == KeyEvent.VK_COMMA || key == KeyEvent.VK_DECIMAL) {
            coma();
        }
        
        if (key == KeyEvent.VK_0 || key == KeyEvent.VK_NUMPAD0) {
            i0();
        }
        if (key == KeyEvent.VK_1 || key == KeyEvent.VK_NUMPAD1) {
            i1();
        }
        if (key == KeyEvent.VK_2 || key == KeyEvent.VK_NUMPAD2) {
            i2();
        }
        if (key == KeyEvent.VK_3 || key == KeyEvent.VK_NUMPAD3) {
            i3();
        }
        if (key == KeyEvent.VK_4 || key == KeyEvent.VK_NUMPAD4) {
            i4();
        }
        if (key == KeyEvent.VK_5 || key == KeyEvent.VK_NUMPAD5) {
            i5();
        }
        if (key == KeyEvent.VK_6 || key == KeyEvent.VK_NUMPAD6) {
            i6();
        }
        if (key == KeyEvent.VK_7 || key == KeyEvent.VK_NUMPAD7) {
            i7();
        }
        if (key == KeyEvent.VK_8 || key == KeyEvent.VK_NUMPAD8) {
            i8();
        }
        if (key == KeyEvent.VK_9 || key == KeyEvent.VK_NUMPAD9) {
            i9();
        }
        
        */
    }//GEN-LAST:event_formKeyPressed

    private void jTextField_RespuestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_RespuestaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_RespuestaActionPerformed

    private void jTextField_ValorCelciusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_ValorCelciusActionPerformed
        // TODO add your handling code here:
        
        
        
        
        /*
        if (evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9') {
               //jTextField_Respuesta.setEditable(true);
               //label.setText("");
               System.out.println("ok");
            } else {
               //tf.setEditable(false);
               //label.setText("* Enter only numeric digits(0-9)");
               System.out.println("no");
            }
        */
        
        /*
        
        int key = evt.getKeyCode();
        
        if (key == KeyEvent.VK_ENTER) {
            igual();
        }
        if (key == KeyEvent.VK_COMMA || key == KeyEvent.VK_DECIMAL) {
            coma();
        }
        
        if (key == KeyEvent.VK_0 || key == KeyEvent.VK_NUMPAD0) {
            i0();
        }
        if (key == KeyEvent.VK_1 || key == KeyEvent.VK_NUMPAD1) {
            i1();
        }
        if (key == KeyEvent.VK_2 || key == KeyEvent.VK_NUMPAD2) {
            i2();
        }
        if (key == KeyEvent.VK_3 || key == KeyEvent.VK_NUMPAD3) {
            i3();
        }
        if (key == KeyEvent.VK_4 || key == KeyEvent.VK_NUMPAD4) {
            i4();
        }
        if (key == KeyEvent.VK_5 || key == KeyEvent.VK_NUMPAD5) {
            i5();
        }
        if (key == KeyEvent.VK_6 || key == KeyEvent.VK_NUMPAD6) {
            i6();
        }
        if (key == KeyEvent.VK_7 || key == KeyEvent.VK_NUMPAD7) {
            i7();
        }
        if (key == KeyEvent.VK_8 || key == KeyEvent.VK_NUMPAD8) {
            i8();
        }
        if (key == KeyEvent.VK_9 || key == KeyEvent.VK_NUMPAD9) {
            i9();
        }
        
        */
        
        
    }//GEN-LAST:event_jTextField_ValorCelciusActionPerformed

    private void jTextField_ValorCelciusKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField_ValorCelciusKeyPressed
        // TODO add your handling code here:
        
        int key = evt.getKeyCode();
        
        if (key == KeyEvent.VK_ENTER) {
            igual();
        }
    }//GEN-LAST:event_jTextField_ValorCelciusKeyPressed

    private void i0() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "0");
        }
    }

    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i1() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "1");
        }
    }

    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i2() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "2");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i3() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "3");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i4() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "4");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i5() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "5");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i6() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "6");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i7() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "7");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i8() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "8");
        }
    }
    /**
     * Método que coloca en el panel el digito seleccionado por el usuario
     */
    private void i9() {
        limpiarError();
        limparCerosIzquierda();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + "9");
        }
    }
    
     private void coma() {
        limpiarError();
        if (jTextField_ValorCelcius.getText().length() < maxCaracteres) {
            if (jTextField_ValorCelcius.getText().length() == 0) {
                jTextField_ValorCelcius.setText("0.");
            } else if (!jTextField_ValorCelcius.getText().contains(".")) {
                jTextField_ValorCelcius.setText(jTextField_ValorCelcius.getText() + ".");
            }
        }
    }
     
    public void limparCerosIzquierda() {
        if (jTextField_ValorCelcius.getText().equalsIgnoreCase("0")) {
            jTextField_ValorCelcius.setText("");
        }
    }
    
    public void limpiarError() {
        if (jTextField_ValorCelcius.getText().equalsIgnoreCase("ERROR")) {// si tiene un error limpia para volver a colocar numeros ;)
            jTextField_ValorCelcius.setText("0");
            jTextField_Respuesta.setText("");
        }
    }
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameConversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrameConversor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_convertir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2_Celsius;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField_Respuesta;
    private javax.swing.JTextField jTextField_ValorCelcius;
    // End of variables declaration//GEN-END:variables
}
